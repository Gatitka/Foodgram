# Generated by Django 3.2.18 on 2023-05-24 08:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='название')),
                ('measurement_unit', models.CharField(db_index=True, max_length=24, verbose_name='ед-ца измерения')),
            ],
            options={
                'verbose_name': 'ингредиент',
                'verbose_name_plural': 'ингредиенты',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200, verbose_name='Название')),
                ('image', models.ImageField(blank=True, null=True, upload_to='recipe/images/')),
                ('text', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('cooking_time', models.IntegerField(verbose_name='Время готовки')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'рецепт',
                'verbose_name_plural': 'рецепты',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='HEX')),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'тэг',
                'verbose_name_plural': 'тэги',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='RecipeTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipe.recipe', verbose_name='Рецепт')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='recipe.tag', verbose_name='Тэг')),
            ],
            options={
                'verbose_name': 'рецепт-тэг',
                'verbose_name_plural': 'рецепты-тэги',
                'ordering': ['recipe'],
                'unique_together': {('recipe', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(verbose_name='Кол-во')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='recipe', to='recipe.ingredient', verbose_name='Ингредиент')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='recipe.recipe', verbose_name='Рецепт')),
            ],
            options={
                'verbose_name': 'рецепт-ингредиенты',
                'verbose_name_plural': 'рецепты-ингредиенты',
                'ordering': ['recipe'],
            },
        ),
        migrations.AddField(
            model_name='recipe',
            name='ingredients',
            field=models.ManyToManyField(related_name='ingredient', through='recipe.RecipeIngredient', to='recipe.Ingredient', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='recipe',
            name='tags',
            field=models.ManyToManyField(through='recipe.RecipeTag', to='recipe.Tag', verbose_name='Тэг'),
        ),
        migrations.CreateModel(
            name='ShopingCartUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shoping_cart_owner', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_shoping_cart', to='recipe.recipe', verbose_name='Рецепты')),
            ],
            options={
                'verbose_name': 'корзина покупок',
                'verbose_name_plural': 'корзины покупок',
                'ordering': ['recipe'],
                'unique_together': {('owner', 'recipe')},
            },
        ),
        migrations.CreateModel(
            name='Favorit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favoriter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorits', to=settings.AUTH_USER_MODEL, verbose_name='Избиратель')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited', to='recipe.recipe', verbose_name='Рецепты')),
            ],
            options={
                'verbose_name': 'избранное',
                'verbose_name_plural': 'избранное',
                'ordering': ['favoriter'],
                'unique_together': {('favoriter', 'recipe')},
            },
        ),
    ]
